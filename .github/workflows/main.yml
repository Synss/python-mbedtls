name: main

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-10.15, windows-2019]
        version: [2.28.1]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - name: Create source dist
        run: python setup.py sdist
      - name: Upload source dist
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
          if-no-files-found: error
      - name: Build and test wheels
        uses: pypa/cibuildwheel@v2.8.0
        env:
          CIBW_BUILD: cp3{7,8,9,10}-*
          CIBW_SKIP: "*-manylinux_i686 *-musllinux_* *-win32"
          CIBW_ENVIRONMENT: VERSION=${{ matrix.version }}
          CIBW_BEFORE_ALL_LINUX: >
            ./scripts/download-mbedtls.sh $VERSION ~/.local/src
            && ./scripts/install-mbedtls.sh ~/.local/src
          CIBW_BEFORE_ALL_MACOS: >
            ./scripts/download-mbedtls.sh $VERSION ~/.local/src
            && ./scripts/install-mbedtls.sh ~/.local/src
            && cp /usr/local/lib/libmbed*dylib .
          CIBW_ENVIRONMENT_WINDOWS: >
            VERSION=${{ matrix.version }}
            LIB=$HOMEDRIVE$HOMEPATH\\mbedtls\\visualc\\VS2010\\x64\\Release
            INCLUDE=$HOMEDRIVE$HOMEPATH\\mbedtls\\include
          CIBW_BEFORE_ALL_WINDOWS: >
            powershell -Command Get-Host
            && powershell %CD%\scripts\download-mbedtls.ps1 %VERSION% %HOMEDRIVE%%HOMEPATH%\mbedtls
            && powershell %CD%\scripts\install-mbedtls.ps1 -ConfigurationType StaticLibrary %HOMEDRIVE%%HOMEPATH%\mbedtls
            && powershell %CD%\scripts\install-mbedtls.ps1 -ConfigurationType DynamicLibrary %HOMEDRIVE%%HOMEPATH%\mbedtls
            && dir %LIB%
          CIBW_TEST_REQUIRES: -rrequirements/tests.txt
          CIBW_TEST_COMMAND: pytest {project}/tests
      - name: Inventory
        run: ls wheelhouse
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: wheelhouse/
          if-no-files-found: error

  publish:
    name: Publish packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs: build
    if: >
      github.event_name == 'push'
      && startsWith(github.ref, 'refs/tags')
      && github.repository == 'Synss/python-mbedtls'
    steps:
      - name: Download source packages
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: Download wheels
        uses: actions/download-artifact@v3
        with:
          name: wheels
          path: dist
      - name: List dir content
        run: ls dist
      - name: Publish to pypi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}
